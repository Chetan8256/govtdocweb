{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","components/Header.jsx","components/LeftBar.jsx","components/Layout.jsx","pages/requestslist.jsx","pages/application.jsx","pages/offlineapplication.jsx","pages/register.jsx","pages/login.jsx","pages/viewslip.jsx","index.js","pages/main.jsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleItemClick","_ref","name","setState","activeItem","logoutHandle","cookie","remove","path","bind","assertThisInitialized","Nav","props","react_default","a","createElement","react_router_dom","assign","exact","activeClassName","Menu","Item","header","position","Icon","load","as","to","active","onClick","Component","LeftBar","vertical","Input","placeholder","Dropdown","item","text","icon","conClick","Layout","components_Header","Grid","divided","Row","columns","Column","width","components_LeftBar","children","RequestLists","isLoaded","open","inputKey","Date","now","applications","userid","invoicefile","size","content","type","pageNumber","uploadedform","modaltype","numPages","alert","message","display","tablefields","fields","onUpload","event","reader","FileReader","file","target","files","toFixed","onloadend","result","readAsDataURL","show","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","json","govtid","pdfjs","GlobalWorkerOptions","workerSrc","error","console","log","close","onSubmit","_callee","dataObj","regenerator_default","wrap","_context","prev","next","preventDefault","postApplicationData","stop","clearFormInputs","onDocumentLoadSuccess","_ref2","_this2","_this3","_this$state","Container","Segment","Table","striped","celled","map","field","HeaderCell","Body","application","Cell","Button","Modal","onClose","closeIcon","Message","color","onDismiss","handleDismiss","Content","entry","onLoadSuccess","prevState","Form","Field","control","label","required","onChange","value","hidden","fluid","key","Actions","Application","visible","selectedValue","panno","addresstype","customername","relationship","relationshipname","fathername","village","aadharno","postoffice","mobileno","tehsil","dateofbirth","district","gender","emailid","pincode","status","pincodeChange","emailChange","stateChange","_ref3","genderChange","_ref4","districtChange","_ref5","dateofbirthChange","_ref6","tehsilChange","_ref7","mobilenoChange","_ref8","postOfficeChange","_ref9","aadharNoChange","_ref10","villageChange","_ref11","fatherNameChange","_ref12","relationShipChange","_ref13","relationshipOptionsChange","_ref14","customerNameChange","_ref15","addressTypeChange","_ref16","panNoChange","_ref17","validate","formFields","sectionId","_ref18","asyncToGenerator","mark","flag","_x","apply","arguments","defineProperty","history","push","_React$createElement","pannovisible","match","params","Group","widths","Select","options","htmlFor","search","searchInput","commonjs","date","iconPosition","dateFormat","floated","OfflineApplication","pdf","data","form","Register","username","email","usernameHandle","emailHandle","mobileHandle","mobile","verticalAlign","centered","Checkbox","Login","password","passwordHandle","where","save","ViewSlip","filename","process","routing","react_router","component","ReactDOM","render","document","getElementById"],"mappings":"2EAAA,SAAAA,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,ycCkDeC,cAnDd,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACdC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAFDI,MAAQ,GACOP,EAKfQ,gBAAkB,SAACjB,EAADkB,GAAA,IAAMC,EAAND,EAAMC,KAAN,OAAiBV,EAAKW,SAAS,CAAEC,WAAYF,KALhDV,EAOfa,aAAe,WACdC,IAAOC,OAAO,SAAU,CAAEC,KAAM,MAChCF,IAAOC,OAAO,WAAY,CAAEC,KAAM,OAPlChB,EAAKa,aAAeb,EAAKa,aAAaI,KAAlBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KAFNA,wEAYL,IACDY,EAAeT,KAAKI,MAApBK,WACFO,EAAM,SAAAC,GAAK,OACjBC,EAAAC,EAAAC,cAACC,EAAA,EAADvB,OAAAwB,OAAA,CACCC,OAAK,GACDN,EAFL,CAGCO,gBAAgB,aAGjB,OACCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACCP,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CAAWC,QAAM,GAACT,EAAAC,EAAAC,cAAA,4BAClBF,EAAAC,EAAAC,cAACK,EAAA,EAAKA,KAAN,CAAWG,SAAS,SACpBV,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CACCnB,KAAK,aACLW,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMtB,KAAK,SAFZ,IAEuBI,IAAOmB,KAAK,aACnCZ,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CAAWK,GAAIf,EACdT,KAAK,UACLyB,GAAG,WACHC,OAAuB,YAAfxB,EACRyB,QAASlC,KAAKK,iBACda,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMtB,KAAK,cAOZW,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CAAWK,GAAIf,EACdT,KAAK,SACLyB,GAAG,SACHE,QAASlC,KAAKU,cACdQ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMtB,KAAK,uBA9CK4B,qBCoDNC,6MAnDbhC,MAAQ,KAERC,gBAAkB,SAACjB,EAADkB,GAAA,IAAMC,EAAND,EAAMC,KAAN,OAAiBV,EAAKW,SAAS,CAAEC,WAAYF,6EAErD,IACAE,EAAeT,KAAKI,MAApBK,WACFO,EAAM,SAAAC,GAAK,OACfC,EAAAC,EAAAC,cAACC,EAAA,EAADvB,OAAAwB,OAAA,CACEC,OAAK,GACDN,EAFN,CAGEO,gBAAgB,aAGpB,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMY,UAAQ,GAEZnB,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,KACER,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,YAAY,eAErBrB,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CAAWnB,KAAK,SAAS0B,OAAuB,WAAfxB,EAAyByB,QAASlC,KAAKK,iBACtEa,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMtB,KAAK,gBADb,UAIAW,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAUC,MAAI,EAACC,KAAK,eAClBxB,EAAAC,EAAAC,cAACoB,EAAA,EAASf,KAAV,KACEP,EAAAC,EAAAC,cAACoB,EAAA,EAASd,KAAV,CAAeiB,KAAK,OAAOD,KAAK,kBAAkBX,GAAIf,EAAKgB,GAAG,sBAAsBE,QAASlC,KAAKK,kBAClGa,EAAAC,EAAAC,cAACoB,EAAA,EAASd,KAAV,CAAeiB,KAAK,QAAQD,KAAK,eAAeX,GAAIf,EAAKgB,GAAG,mBAAmBE,QAASlC,KAAKK,oBAKjGa,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CAAWnB,KAAK,YAAY0B,OAAuB,cAAfxB,EAA4BsB,GAAIf,EAAKgB,GAAG,aAAaY,SAAU5C,KAAKK,iBAAxG,cAKAa,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CACEK,GAAIf,EAAKgB,GAAG,gBACZzB,KAAK,eACL0B,OAAuB,iBAAfxB,EACRyB,QAASlC,KAAKK,iBAJhB,wBArCY8B,aCGPU,UAAA,SAAA5B,GACb,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0B,EAAD,MACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,QAAQ,cACZ9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAKE,IAAN,CAAUC,QAAS,GACjBhC,EAAAC,EAAAC,cAAC2B,EAAA,EAAKI,OAAN,CAAaC,MAAO,GAClBlC,EAAAC,EAAAC,cAACiC,EAAD,OAEFnC,EAAAC,EAAAC,cAAC2B,EAAA,EAAKI,OAAN,CAAaC,MAAO,IACjBnC,EAAMqC,uBC0ONC,6MAtPXnD,MAAQ,CACJoD,UAAU,EACVC,MAAM,EACNC,SAAUC,KAAKC,MACfC,aAAc,GACdC,OAAQ,GACRC,YAAa,CACTxD,KAAM,GACNyD,KAAM,GACNC,QAAS,GACTC,KAAM,IAEVC,WAAY,EACZC,aAAc,GACdC,UAAW,GACXC,SAAU,KACVC,MAAO,CACZC,QAAS,GACTN,KAAM,GACNO,SAAS,GAEJC,YAAa,CAAC,SAAS,eAAe,aAAa,UAAU,WAAW,WAAW,cAAc,QAAQ,WACzGC,OAAQ,CAAC,cAAc,eAAe,eAAe,mBAAmB,aAAa,UAAU,WAAW,aAAa,WAAW,SAAS,cAAc,WAAW,SAAS,QAAQ,UAAU,UAAU,aA2B7MC,SAAW,SAACC,GACR,IAAIC,EAAS,IAAIC,WACbC,EAAOH,EAAMI,OAAOC,MAAM,GAE1BnB,EAAclE,EAAKO,MAAM2D,YAE7BA,EAAW,KAAWiB,EAAKzE,KACjCwD,EAAW,KAAWiB,EAAKd,KAC3BH,EAAW,MAAYiB,EAAKhB,KAAK,KAAK,MAAMmB,QAAQ,GAEpDL,EAAOM,UAAY,SAACJ,GAEVjB,EAAW,QAAce,EAAOO,QAEpCP,EAAOQ,cAAcN,GAErBnF,EAAKW,SAAS,CAACuD,mBAGnBwB,KAAO,SAACvB,EAAMF,EAAQO,EAAWD,GAA1B,OAA2C,WAC9CoB,MAAM,kDAAmD,CAC9DC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACjG,GAAImE,IAC1B+B,QAAS,CAACC,eAAe,sBAEzBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACA,SAACV,GACYxF,EAAKW,SAAS,CAAC4D,aAAc,+BAAiCiB,EAAOb,QAAQ,GAAG0B,OAAOjC,UACvFkC,QAAMC,oBAAoBC,UAAY,sBAEnD,SAACC,GACAC,QAAQC,IAAIF,KAIRzG,EAAKW,SAAS,CAAEwD,OAAKF,SAAQL,MAAM,EAAMY,kBAE7CoC,MAAQ,kBAAM5G,EAAKW,SAAS,CAAEiD,MAAM,OAEpCiD,+CAAW,SAAAC,EAAOvH,GAAP,IAAAwH,EAAA,OAAAC,EAAA1F,EAAA2F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb7H,EAAE8H,iBAEQN,EAAU,CACV9C,OAAQjE,EAAKO,MAAM0D,OACnBC,YAAalE,EAAKO,MAAM2D,aAG5BlE,EAAKsH,oBAAoBP,GARlB,wBAAAG,EAAAK,SAAAT,8DAWXQ,oBAAsB,SAACP,GAEnBpB,MAAM,iDAAkD,CAC7DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUgB,GACrBf,QAAS,CAACC,eAAe,sBAEzBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACA,SAACV,GACY,IAAId,EAAQ1E,EAAKO,MAAMmE,MACvBgC,QAAQC,IAAInB,EAAOb,QAAQ7E,IACvB0F,EAAOb,QAAQ7E,IACf4E,EAAK,QAAc,sCACnBA,EAAK,KAAW,QAChBA,EAAK,SAAc,IAEnBA,EAAK,KAAW,MAChBA,EAAK,SAAc,EACnBA,EAAK,QAAc,2DAEvB1E,EAAKW,SAAS,CAAC+D,UAEf1E,EAAKwH,mBAElB,SAACf,GACAC,QAAQC,IAAIF,QAKZe,gBAAkB,WAEdxH,EAAKW,SAAS,CAACkD,SAAUC,KAAKC,WAGlC0D,sBAAwB,SAAAC,GAAkB,IAAfjD,EAAeiD,EAAfjD,SACvBzE,EAAKW,SAAS,CAAE8D,iGAhHA,IAAAkD,EAAAxH,KAEhBmG,QAAMC,oBAAoBC,UAAY,qBAE5Cb,MAAM,0CACLO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACS,SAACV,GACGmC,EAAKhH,SAAS,CACVgD,UAAU,EACVK,aAAcwB,KAItB,SAACiB,GACGkB,EAAKhH,SAAS,CACVgD,UAAU,EACV8C,6CAkGN,IAAAmB,EAAAzH,KAAA0H,EACkH1H,KAAKI,MAAtH4D,EADD0D,EACC1D,KAAMU,EADPgD,EACOhD,YAAab,EADpB6D,EACoB7D,aAAcJ,EADlCiE,EACkCjE,KAAMC,EADxCgE,EACwChE,SAAUI,EADlD4D,EACkD5D,OAAQS,EAD1DmD,EAC0DnD,MAAOF,EADjEqD,EACiErD,UAAWD,EAD5EsD,EAC4EtD,aAAcD,EAD1FuD,EAC0FvD,WAAYG,EADtGoD,EACsGpD,SAC5G,OACIpD,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACIzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAA,mCAEJF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOC,SAAO,EAACC,QAAM,GACjB7G,EAAAC,EAAAC,cAACyG,EAAA,EAAMjI,OAAP,KACIsB,EAAAC,EAAAC,cAACyG,EAAA,EAAM5E,IAAP,KAEQyB,EAAYsD,IAAM,SAAAC,GAAK,OACnB/G,EAAAC,EAAAC,cAACyG,EAAA,EAAMK,WAAP,KAAmBD,KAG3B/G,EAAAC,EAAAC,cAACyG,EAAA,EAAMK,WAAP,aACAhH,EAAAC,EAAAC,cAACyG,EAAA,EAAMK,WAAP,eAIRhH,EAAAC,EAAAC,cAACyG,EAAA,EAAMM,KAAP,KAEQtE,EAAamE,IAAM,SAAAI,GAAW,OAC1BlH,EAAAC,EAAAC,cAACyG,EAAA,EAAM5E,IAAP,KAEQyB,EAAYsD,IAAM,SAAAC,GAAK,OACnB/G,EAAAC,EAAAC,cAACyG,EAAA,EAAMQ,KAAP,KAAaD,EAAYH,MAGjC/G,EAAAC,EAAAC,cAACyG,EAAA,EAAMQ,KAAP,KACInH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAStE,KAAK,OAAOrB,KAAK,WAAWT,QAASuF,EAAKlC,KAAK,QAAS6C,EAAW,GAAQ,WAExFlH,EAAAC,EAAAC,cAACyG,EAAA,EAAMQ,KAAP,KACInH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAStE,KAAK,OAAOrB,KAAK,SAAST,QAASuF,EAAKlC,KAAK,OAAQ6C,EAAW,OAAY,kBAO7GlH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAOvE,KAAMA,EAAMP,KAAMA,EAAM+E,QAASxI,KAAKyG,MAAOgC,WAAS,GACzDvH,EAAAC,EAAAC,cAACmH,EAAA,EAAM3I,OAAP,8BAEsB,IAAlB2E,EAAME,SACNvD,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAS1E,KAAK,OAAO2E,MAAOpE,EAAK,KAAUqE,UAAW5I,KAAK6I,eACvD3H,EAAAC,EAAAC,cAACsH,EAAA,EAAQ9I,OAAT,KAAiB2E,EAAK,UAG9BrD,EAAAC,EAAAC,cAACmH,EAAA,EAAMO,QAAP,KAEsB,SAAdzE,EACInD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2H,EAAA,SAAD,CACI/D,KAAMZ,EACN4E,cAAehJ,KAAKsH,sBAAsBxG,KAAKd,OAE/CkB,EAAAC,EAAAC,cAAC2H,EAAA,KAAD,CAAM3F,MAAM,OAAOe,WAAYA,KAEnCjD,EAAAC,EAAAC,cAAA,iBAAS+C,EAAT,OAAyBG,GACzBpD,EAAAC,EAAAC,cAAA,UAAQc,QAAS,kBAAMuF,EAAKjH,SAAS,SAAAyI,GAAS,MAAK,CAAE9E,WAAY8E,EAAU9E,WAAa,OAAxF,aAGAjD,EAAAC,EAAAC,cAAA,UAAQc,QAAS,kBAAMuF,EAAKjH,SAAS,SAAAyI,GAAS,MAAK,CAAE9E,WAAY8E,EAAU9E,WAAa,OAAxF,cAKJjD,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMxC,SAAU1G,KAAK0G,UACjBxF,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,SACN9G,YAAY,SACZ+G,UAAQ,EACRC,SAAUvJ,KAAK8D,OACf0F,MAAO1F,IAEX5C,EAAAC,EAAAC,cAAC8H,EAAA,EAAK5G,MAAN,CAAY4B,KAAM,OAAOvE,GAAG,OAAOY,KAAK,OAAOkJ,QAAM,EAACC,OAAK,EAACL,MAAM,cAAcE,SAAU,SAAC1E,GAAD,OAAW4C,EAAK7C,SAASC,IAAQ8E,IAAKjG,IAChIxC,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAQpE,KAAK,UAAb,YAOhBhD,EAAAC,EAAAC,cAACmH,EAAA,EAAMqB,QAAP,iBAnODzH,wCCoZZ0H,cAzWX,SAAAA,IAAa,IAAAhK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6J,IACThK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+J,GAAA1J,KAAAH,QAxCJI,MAAQ,CACVkG,MAAO,KACP9C,UAAU,EACVgG,MAAO,GACPjF,MAAO,CACNC,QAAS,GACTN,KAAM,GACNO,SAAS,GAEJqF,SAAS,EAETC,cAAe,GACfC,MAAO,GACbC,YAAa,GACbC,aAAc,GACdC,aAAc,GACdC,iBAAkB,GAClBC,WAAY,GACZC,QAAS,GACTC,SAAU,GACJC,WAAY,GACZC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,SAAU,GACVC,OAAQ,GACRzK,MAAO,GACP0K,QAAS,GACTC,QAAS,GACT7E,OAAQ,CACJ3F,KAAM,GACNyD,KAAM,GACNE,KAAM,GACND,QAAS,IAEb+G,OAAQ,GACRtH,SAAUC,KAAKC,MACfe,OAAQ,CAAC,cAAc,eAAe,eAAe,mBAAmB,aAAa,UAAU,WAAW,aAAa,WAAW,SAAS,cAAc,WAAW,SAAS,QAAQ,UAAU,UAAU,WAEhM9E,EAWboL,cAAgB,SAAC7L,EAADkB,GAAgB,IAAXkJ,EAAWlJ,EAAXkJ,MACjB3J,EAAKW,SAAS,CAACuK,QAASvB,KAZf3J,EAcbqL,YAAc,SAAC9L,EAADmI,GAAgB,IAAXiC,EAAWjC,EAAXiC,MACf3J,EAAKW,SAAS,CAACsK,QAAStB,KAff3J,EAiBbsL,YAAc,SAAC/L,EAADgM,GAAgB,IAAX5B,EAAW4B,EAAX5B,MACf3J,EAAKW,SAAS,CAACJ,MAAOoJ,KAlBb3J,EAoBbwL,aAAe,SAACjM,EAADkM,GAAgB,IAAX9B,EAAW8B,EAAX9B,MAChB3J,EAAKW,SAAS,CAACqK,OAAQrB,KArBd3J,EAuBb0L,eAAiB,SAACnM,EAADoM,GAAgB,IAAXhC,EAAWgC,EAAXhC,MAClB3J,EAAKW,SAAS,CAACoK,SAAUpB,KAxBhB3J,EA0Bb4L,kBAAoB,SAACrM,EAADsM,GAAgB,IAAXlC,EAAWkC,EAAXlC,MACrB3J,EAAKW,SAAS,CAACmK,YAAanB,KA3BnB3J,EA6Bb8L,aAAe,SAACvM,EAADwM,GAAgB,IAAXpC,EAAWoC,EAAXpC,MAChB3J,EAAKW,SAAS,CAACkK,OAAQlB,KA9Bd3J,EAgCbgM,eAAiB,SAACzM,EAAD0M,GAAgB,IAAXtC,EAAWsC,EAAXtC,MAClB3J,EAAKW,SAAS,CAACiK,SAAUjB,KAjChB3J,EAmCbkM,iBAAmB,SAAC3M,EAAD4M,GAAgB,IAAXxC,EAAWwC,EAAXxC,MACpB3J,EAAKW,SAAS,CAACgK,WAAYhB,KApClB3J,EAsCboM,eAAiB,SAAC7M,EAAD8M,GAAgB,IAAX1C,EAAW0C,EAAX1C,MAClB3J,EAAKW,SAAS,CAAC+J,SAAUf,KAvChB3J,EAyCbsM,cAAgB,SAAC/M,EAADgN,GAAgB,IAAX5C,EAAW4C,EAAX5C,MACjB3J,EAAKW,SAAS,CAAC8J,QAASd,KA1Cf3J,EA4CbwM,iBAAmB,SAACjN,EAADkN,GAAgB,IAAX9C,EAAW8C,EAAX9C,MACpB3J,EAAKW,SAAS,CAAC6J,WAAYb,KA7ClB3J,EA+Cb0M,mBAAqB,SAACnN,EAADoN,GAAgB,IAAXhD,EAAWgD,EAAXhD,MACtB3J,EAAKW,SAAS,CAAC4J,iBAAkBZ,KAhDxB3J,EAkDb4M,0BAA4B,SAACrN,EAADsN,GAAgB,IAAXlD,EAAWkD,EAAXlD,MAC7B3J,EAAKW,SAAS,CAAC2J,aAAcX,KAnDpB3J,EAqDb8M,mBAAqB,SAACvN,EAADwN,GAAgB,IAAXpD,EAAWoD,EAAXpD,MACtB3J,EAAKW,SAAS,CAAC0J,aAAcV,KAtDpB3J,EAwDbgN,kBAAoB,SAACzN,EAAD0N,GAAgB,IAAXtD,EAAWsD,EAAXtD,MACrB3J,EAAKW,SAAS,CAACyJ,YAAaT,KAzDnB3J,EA2DbkN,YAAc,SAAC3N,EAAD4N,GAAgB,IAAXxD,EAAWwD,EAAXxD,MACf3J,EAAKW,SAAS,CAACwJ,MAAOR,KA5Db3J,EAgEboN,SAAW,WACb,IAAI1I,EAAQ1E,EAAKO,MAAMmE,MACvB,MAAuC,KAApC1E,EAAKO,MAAM8M,WAAWC,WACxB5I,EAAK,QAAc,wBACnBA,EAAK,KAAW,WAChB1E,EAAKW,SAAS,CAAC+D,WACR,IAEK1E,EAAKO,MAAMmE,MAClB,SAAc,GACZ,IA1EO1E,EA8Eb+E,SAAW,SAACC,GACR,IAAIC,EAAS,IAAIC,WACbC,EAAOH,EAAMI,OAAOC,MAAM,GAE1BgB,EAASrG,EAAKO,MAAM8F,OAExBA,EAAM,KAAWlB,EAAKzE,KAC5B2F,EAAM,KAAWlB,EAAKd,KACtBgC,EAAM,MAAYlB,EAAKhB,KAAK,KAAK,MAAMmB,QAAQ,GAE/CL,EAAOM,UAAY,SAACJ,GAEVkB,EAAM,QAAcpB,EAAOO,QAE/BP,EAAOQ,cAAcN,GAErBnF,EAAKW,SAAS,CAAC0F,YA9FNrG,EAkGb6G,SAlGa,eAAA0G,EAAAtN,OAAAuN,EAAA,EAAAvN,CAAA+G,EAAA1F,EAAAmM,KAkGF,SAAA3G,EAAOvH,GAAP,IAAAwH,EAAA,OAAAC,EAAA1F,EAAA2F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb7H,EAAE8H,iBAEQN,EAAU,CACVoE,OAAQ,UACRuC,KAAM,IACNzJ,OAAQnD,IAAOmB,KAAK,WAGxBjC,EAAKO,MAAMuE,OAAOqD,IAAI,SAAAC,GAAK,OACvBrB,EAAQqB,GAASpI,EAAKO,MAAM6H,KAGhCpI,EAAKsH,oBAAoBP,GAblB,wBAAAG,EAAAK,SAAAT,MAlGE,gBAAA6G,GAAA,OAAAJ,EAAAK,MAAAzN,KAAA0N,YAAA,GAAA7N,EAkHbsH,oBAAsB,SAACP,GAEnBpB,MAAM,wDAAyD,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUgB,GACrBf,QAAS,CAACC,eAAe,sBAEzBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACA,SAACV,GACY,IAAId,EAAQ1E,EAAKO,MAAMmE,MACvBgC,QAAQC,IAAInB,EAAOb,QAAQ7E,IACvB0F,EAAOb,QAAQ7E,IACf4E,EAAK,QAAc,+CACnBA,EAAK,KAAW,QAChBA,EAAK,SAAc,IAEnBA,EAAK,KAAW,MAChBA,EAAK,SAAc,EACnBA,EAAK,QAAc,2DAEvB1E,EAAKW,SAAS,CAAC+D,UAEf1E,EAAKwH,mBAElB,SAACf,GACAC,QAAQC,IAAIF,MA5ICzG,EAiJbwH,gBAAkB,WACdxH,EAAKO,MAAMuE,OAAOqD,IAAI,SAAAC,GAAK,OACvBpI,EAAKW,SAALV,OAAA6N,EAAA,EAAA7N,CAAA,GAAgBmI,EAAQ,OAE5BpI,EAAKW,SAAS,CAACkD,SAAUC,KAAKC,SArJrB/D,mFAKFc,IAAOmB,KAAK,WACf9B,KAAKiB,MAAM2M,QAAQC,KAAK,2CAkJtB,IAAAC,EAAAtG,EAAAxH,KAAA0H,EACgN1H,KAAKI,MAAtMmE,GADfmD,EACCqG,aADDrG,EACenD,OAAOb,EADtBgE,EACsBhE,SAASsG,EAD/BtC,EAC+BsC,MAAOC,EADtCvC,EACsCuC,YAAYC,EADlDxC,EACkDwC,aAAaC,EAD/DzC,EAC+DyC,aAAaC,EAD5E1C,EAC4E0C,iBAAiBC,EAD7F3C,EAC6F2C,WAAWC,EADxG5C,EACwG4C,QAAQC,EADhH7C,EACgH6C,SAASC,EADzH9C,EACyH8C,WAAWC,EADpI/C,EACoI+C,SAASC,EAD7IhD,EAC6IgD,OAAOC,EADpJjD,EACoJiD,YAAYC,EADhKlD,EACgKkD,SAASC,EADzKnD,EACyKmD,OAAOzK,EADhLsH,EACgLtH,MAAM0K,EADtLpD,EACsLoD,QAAQC,EAD9LrD,EAC8LqD,QAM7L3C,GAPDV,EACsMxB,OAMtLlG,KAAKiB,MAAM+M,MAAMC,OAAhC7F,aAQP,OACIlH,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACIzG,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACI7B,EAAAC,EAAAC,cAAC2B,EAAA,EAAKI,OAAN,KACIjC,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAA,2CAEJF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,MAE0B,IAAlBrD,EAAME,SACNvD,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAS1E,KAAK,OAAO2E,MAAOpE,EAAK,KAAUqE,UAAW5I,KAAK6I,eACvD3H,EAAAC,EAAAC,cAACsH,EAAA,EAAQ9I,OAAT,KAAiB2E,EAAK,UAI9BrD,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMxC,SAAU1G,KAAK0G,UACjBxF,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SAEM,WAAhB/F,GACDlH,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,aACN9G,YAAY,aACZ+G,UAAQ,EACRC,SAAUvJ,KAAK+M,YACfvD,MAAOQ,IAIf9I,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,eACN9G,YAAY,eACZ+G,UAAQ,EACRC,SAAUvJ,KAAK6M,kBACfrD,MAAOS,IAEX/I,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,gBACN9G,YAAY,gBACZ+G,UAAQ,EACRC,SAAUvJ,KAAK2M,mBACfnD,MAAOU,KAGfhJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SACfjN,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAASgF,IACTC,QAxDR,CACxB,CAAE1E,IAAK,MAAOjH,KAAM,MAAO8G,MAAO,OAClC,CAAEG,IAAK,OAAQjH,KAAM,OAAQ8G,MAAO,QACpC,CAAEG,IAAK,OAAQjH,KAAM,OAAQ8G,MAAO,SAsDJH,MAAO,CAAE/F,SAAU,eAAgBgL,QAAS,oCAC5C/L,YAAY,eACZgM,QAAM,EACNC,YAAa,CAAE7O,GAAI,oCACnB2J,UAAQ,EACRlG,MAAO,EACPmG,SAAUvJ,KAAKyM,0BACfjD,MAAOW,IAEXjJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,GACN9G,YAAY,mCACZ+G,UAAQ,EACRlG,MAAO,EACPmG,SAAUvJ,KAAKuM,mBACf/C,MAAOY,IAEXlJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,cACN9G,YAAY,cACZ+G,UAAQ,EACRlG,MAAO,EACPmG,SAAUvJ,KAAKqM,iBACf7C,MAAOa,KAGfnJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SACfjN,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,UACN9G,YAAY,UACZ+G,UAAQ,EACRC,SAAUvJ,KAAKmM,cACf3C,MAAOc,IAEXpJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,iBACN9G,YAAY,iBACZ+G,UAAQ,EACRC,SAAUvJ,KAAKiM,eACfzC,MAAOe,IAEXrJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,cACN9G,YAAY,cACZ+G,UAAQ,EACRC,SAAUvJ,KAAK+L,iBACfvC,MAAOgB,KAGftJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SACfjN,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,YACN9G,YAAY,YACZgH,SAAUvJ,KAAK6L,eACfvC,UAAQ,EACRE,MAAOiB,IAEXvJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,SACN9G,YAAY,SACZ+G,UAAQ,EACRC,SAAUvJ,KAAK2L,aACfnC,MAAOkB,IAEXxJ,EAAAC,EAAAC,cAACqN,EAAA,WAADX,EAAA,CACIvN,KAAK,OACLgC,YAAY,OACZ8G,MAAM,gBACNG,MAAOxJ,KAAKI,MAAMsO,KAClBC,aAAa,OACbC,WAAW,cANf9O,OAAA6N,EAAA,EAAA7N,CAAAgO,EAAA,QAOanD,GAPb7K,OAAA6N,EAAA,EAAA7N,CAAAgO,EAAA,WAQc9N,KAAKyL,mBARnBqC,KAWJ5M,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SACfjN,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,WACN9G,YAAY,WACZ+G,UAAQ,EACRC,SAAUvJ,KAAKuL,eACf/B,MAAOoB,IAEX1J,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAASgF,IACTC,QA7Jd,CAClB,CAAE1E,IAAK,IAAKjH,KAAM,OAAQ8G,MAAO,QACjC,CAAEG,IAAK,IAAKjH,KAAM,SAAU8G,MAAO,UACnC,CAAEG,IAAK,IAAKjH,KAAM,QAAS8G,MAAO,UA2JFH,MAAO,CAAE/F,SAAU,SAAUgL,QAAS,8BACtC/L,YAAY,SACZgM,QAAM,EACNC,YAAa,CAAE7O,GAAI,8BACnB2J,UAAQ,EACRC,SAAUvJ,KAAKqL,aACf7B,MAAOqB,IAEX3J,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,QACN9G,YAAY,QACZ+G,UAAQ,EACRC,SAAUvJ,KAAKmL,YACf3B,MAAOpJ,KAGfc,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SACfjN,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,eACN9G,YAAY,WACZ+G,UAAQ,EACRC,SAAUvJ,KAAKkL,YACf1B,MAAOsB,IAEX5J,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,UACN9G,YAAY,UACZ+G,UAAQ,EACRC,SAAUvJ,KAAKiL,cACfzB,MAAOuB,IAEX7J,EAAAC,EAAAC,cAAC8H,EAAA,EAAK5G,MAAN,CAAY4B,KAAM,OAAOvE,GAAG,OAAOY,KAAK,OAAOkJ,QAAM,EAACC,OAAK,EAACL,MAAM,cAAcE,SAAU,SAAC1E,GAAD,OAAW2C,EAAK5C,SAASC,IAAQ8E,IAAKjG,KAEpIxC,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SACfjN,EAAAC,EAAAC,cAAC8H,EAAA,EAAKZ,OAAN,CAAaK,MAAM,SAASkG,QAAQ,SAApC,wBArYd1M,aCuHX2M,6MAvHX1O,MAAQ,CACJ2O,IAAK,GACL/K,KAAM,GACNE,KAAM,GACNR,SAAUC,KAAKC,MACfrD,KAAM,GACNgE,MAAO,CACZC,QAAS,GACTN,KAAM,GACNO,SAAS,MAURG,SAAW,SAACC,GACR,GAAIA,EAAMI,OAAOC,MAAM,GAAI,CACvB,IAAIJ,EAAS,IAAIC,WACbC,EAAOH,EAAMI,OAAOC,MAAM,GAC9BrF,EAAKW,SAAS,CAACwD,MAAOgB,EAAKhB,KAAK,KAAK,MAAMmB,QAAQ,KACnDtF,EAAKW,SAAS,CAACD,KAAMyE,EAAKzE,OAC1BV,EAAKW,SAAS,CAAC0D,KAAMc,EAAKd,OAE1BY,EAAOM,UAAY,SAACJ,GAChBnF,EAAKW,SAAS,CAACuO,IAAKjK,EAAOO,UAE/BP,EAAOQ,cAAcN,OAK7B0B,+CAAW,SAAAC,EAAOvH,GAAP,IAAA4P,EAAA,OAAAnI,EAAA1F,EAAA2F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP7H,EAAE8H,iBACFX,QAAQC,IAAI3G,EAAKO,MAAM4D,MACnBgL,EAAO,CACPC,KAAM,CACFhL,QAASpE,EAAKO,MAAM2O,IACpBxO,KAAMV,EAAKO,MAAMG,KACjByD,KAAMnE,EAAKO,MAAM4D,KACjBE,KAAMrE,EAAKO,MAAM8D,MAErBqJ,KAAM,IACNvC,OAAQ,UACRlH,OAAQ,IAGZ0B,MAAM,2DAA4D,CACvEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUoJ,GACrBnJ,QAAS,CAACC,eAAe,sBAEzBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACA,SAACV,GACY,IAAId,EAAQ1E,EAAKO,MAAMmE,MACvBgC,QAAQC,IAAInB,EAAOb,QAAQ7E,IACvB0F,EAAOb,QAAQ7E,IACf4E,EAAK,QAAc,+CACnBA,EAAK,KAAW,QAChBA,EAAK,SAAc,IAEnBA,EAAK,KAAW,MAChBA,EAAK,SAAc,EACnBA,EAAK,QAAc,0EAEvB1E,EAAKW,SAAS,CAAC+D,UACf1E,EAAKwH,mBAElB,SAACf,GACAC,QAAQC,IAAIF,KAtCD,wBAAAS,EAAAK,SAAAT,8DA2CXU,gBAAkB,WACdxH,EAAKW,SAAS,CAACkD,SAAUC,KAAKC,4FAjEvBjD,IAAOmB,KAAK,WACf9B,KAAKiB,MAAM2M,QAAQC,KAAK,2CAmEtB,IAAArG,EAAAxH,KAAA0H,EACoB1H,KAAKI,MAAxBmE,EADDmD,EACCnD,MAAOb,EADRgE,EACQhE,SAEd,OACIxC,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACIzG,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACI7B,EAAAC,EAAAC,cAAC2B,EAAA,EAAKI,OAAN,KACIjC,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAA,yCAEJF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KAEyB,GAAjBrD,EAAME,SACNvD,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAS1E,KAAK,OAAO2E,MAAOpE,EAAK,KAAUqE,UAAW5I,KAAK6I,eACvD3H,EAAAC,EAAAC,cAACsH,EAAA,EAAQ9I,OAAT,KAAiB2E,EAAK,UAI9BrD,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMxC,SAAU1G,KAAK0G,UACjBxF,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SAEfjN,EAAAC,EAAAC,cAAC8H,EAAA,EAAK5G,MAAN,CAAY4B,KAAM,OAAOvE,GAAG,OAAOY,KAAK,OAAOkJ,QAAM,EAACC,OAAK,EAACL,MAAM,cAAcE,SAAU,SAAC1E,GAAD,OAAW2C,EAAK5C,SAASC,IAAQ8E,IAAKjG,KAEpIxC,EAAAC,EAAAC,cAAC8H,EAAA,EAAKgF,MAAN,CAAYC,OAAO,SACfjN,EAAAC,EAAAC,cAAC8H,EAAA,EAAKZ,OAAN,CAAaK,MAAM,SAASkG,QAAQ,SAApC,wBA5GP1M,sBC2IlB+M,6MA5IX9O,MAAQ,CACJ+O,SAAU,GACVC,MAAO,GACP3E,SAAU,GACVlG,MAAO,CACZC,QAAS,GACTN,KAAM,GACNO,SAAS,MAIR4K,eAAiB,SAACjQ,EAADkB,GAAgB,IAAXkJ,EAAWlJ,EAAXkJ,MAClB3J,EAAKW,SAAS,CAAC2O,SAAU3F,OAG7B8F,YAAc,SAAClQ,EAADmI,GAAgB,IAAXiC,EAAWjC,EAAXiC,MACf3J,EAAKW,SAAS,CAAC4O,MAAO5F,OAG1B+F,aAAe,SAACnQ,EAADgM,GAAgB,IAAX5B,EAAW4B,EAAX5B,MAChB3J,EAAKW,SAAS,CAACgP,OAAQhG,OAG3B9C,+CAAW,SAAAC,EAAOvH,GAAP,IAAA4P,EAAA,OAAAnI,EAAA1F,EAAA2F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP7H,EAAE8H,iBACE8H,EAAO,CACPG,SAAUtP,EAAKO,MAAM+O,SACrBC,MAAOvP,EAAKO,MAAMgP,MAClBI,OAAQ3P,EAAKO,MAAMoP,QAGvBhK,MAAM,8CAA+C,CAC1DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUoJ,GACrBnJ,QAAS,CAACC,eAAe,sBAEzBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACA,SAACV,GACY,IAAId,EAAQ1E,EAAKO,MAAMmE,MAEnBc,EAAOb,QAAQ7E,IACf4E,EAAK,QAAc,yCACnBA,EAAK,KAAW,QAChBA,EAAK,SAAc,IAEnBA,EAAK,KAAW,MAChBA,EAAK,SAAc,EACnBA,EAAK,QAAc,uCAEvB1E,EAAKW,SAAS,CAAC+D,UACf1E,EAAKwH,mBAElB,SAACf,GACAC,QAAQC,IAAIF,KA/BD,wBAAAS,EAAAK,SAAAT,8DAqCXU,gBAAkB,WACdxH,EAAKW,SAAS,CAAC2O,SAAU,GAAIC,MAAO,GAAII,OAAQ,8EAI1C,IAAA9H,EACmC1H,KAAKI,MAAvC+O,EADDzH,EACCyH,SAAUC,EADX1H,EACW0H,MAAOI,EADlB9H,EACkB8H,OAAQjL,EAD1BmD,EAC0BnD,MAShC,OACIrD,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACIzG,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAM0M,cAAc,SAASvM,QAAS,EAAGwM,UAAQ,GAC7CxO,EAAAC,EAAAC,cAAC2B,EAAA,EAAKE,IAAN,CAAUwM,cAAc,UACpBvO,EAAAC,EAAAC,cAAC2B,EAAA,EAAKI,OAAN,KACIjC,EAAAC,EAAAC,cAACwG,EAAA,EAAD,MAEA1G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAA,gCAEsB,IAAlBmD,EAAME,SACFvD,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAS1E,KAAK,OAAO2E,MAAOpE,EAAK,KAAUqE,UAAW5I,KAAK6I,eACvD3H,EAAAC,EAAAC,cAACsH,EAAA,EAAQ9I,OAAT,KAAiB2E,EAAK,UAGlCrD,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMxC,SAAU1G,KAAK0G,UACjBxF,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,YACN9G,YAAY,YACZ+G,UAAQ,EACRC,SAAUvJ,KAAKqP,eACf7F,MAAO2F,IAEXjO,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,QACN9G,YAAY,QACZ+G,UAAQ,EACRC,SAAUvJ,KAAKsP,YACf9F,MAAO4F,IAEXlO,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,YACN9G,YAAY,YACZ+G,UAAQ,EACRC,SAAUvJ,KAAKuP,aACf/F,MAAOgG,IAEXtO,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,KACIjI,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAUtG,MAAM,yCAEpBnI,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAQpE,KAAK,UAAb,YAGRhD,EAAAC,EAAAC,cAACwG,EAAA,EAAD,oCAEI1G,EAAAC,EAAAC,cAACK,EAAA,EAAKA,KAAN,CAAWG,SAAS,SAChBV,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CAAWK,GAzD3B,SAAAd,GAAK,OACbC,EAAAC,EAAAC,cAACC,EAAA,EAADvB,OAAAwB,OAAA,CACEC,OAAK,GACDN,EAFN,CAGEO,gBAAgB,aAsDUjB,KAAK,QACLyB,GAAG,SAEHE,QAASlC,KAAKK,iBAJlB,wBA9Hb8B,aCgIRyN,6MA5HXxP,MAAQ,CACJgP,MAAO,GACPS,SAAU,MAUdR,eAAiB,SAACxK,EAADvE,GAAoB,IAAXkJ,EAAWlJ,EAAXkJ,MACtB3J,EAAKW,SAAS,CAAC4O,MAAO5F,OAG1BsG,eAAiB,SAACjL,EAAD0C,GAAoB,IAAXiC,EAAWjC,EAAXiC,MACtB3J,EAAKW,SAAS,CAACqP,SAAUrG,OAG7B9C,SAAW,SAACtH,GACRA,EAAE8H,iBACF,IAAI8H,EAAO,CACPe,MAAO,CACHX,MAAOvP,EAAKO,MAAMgP,MAClBS,SAAUhQ,EAAKO,MAAMyP,WAI7BrK,MAAM,oDAAsDG,KAAKC,UAAUoJ,IAChFjJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACA,SAACV,GACwBxF,EAAKO,MAAMmE,MACvBgC,QAAQC,IAAInB,GAERA,EAAO1F,IAAM0F,EAAO+J,QACpBzO,IAAOqP,KAAK,SAAU3K,EAAO1F,GAAI,CAAEkB,KAAM,MACzCF,IAAOqP,KAAK,WAAY3K,EAAO8J,SAAU,CAAEtO,KAAM,MACjDhB,EAAKoB,MAAM2M,QAAQC,KAAK,eAa5BhO,EAAKwH,mBAElB,SAACf,GACAC,QAAQC,IAAIF,QAKZe,gBAAkB,WACdxH,EAAKW,SAAS,CAACqP,SAAU,GAAIT,MAAO,yFAvDhCzO,IAAOmB,KAAK,WACZ9B,KAAKiB,MAAM2M,QAAQC,KAAK,+CAyDtB,IAAAnG,EACoB1H,KAAKI,MAAxBgP,EADD1H,EACC0H,MAAOS,EADRnI,EACQmI,SASd,OACI3O,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACIzG,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAM0M,cAAc,SAASvM,QAAS,EAAGwM,UAAQ,GACjDxO,EAAAC,EAAAC,cAAC2B,EAAA,EAAKE,IAAN,CAAUwM,cAAc,UACpBvO,EAAAC,EAAAC,cAAC2B,EAAA,EAAKI,OAAN,KACIjC,EAAAC,EAAAC,cAACwG,EAAA,EAAD,MAGA1G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMxC,SAAU1G,KAAK0G,UACjBxF,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,QACN9G,YAAY,QACZ+G,UAAQ,EACRC,SAAUvJ,KAAKqP,eACf7F,MAAO4F,IAEXlO,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,CACIC,QAAS9G,IACT+G,MAAM,WACN9G,YAAY,WACZ+G,UAAQ,EACRC,SAAUvJ,KAAK8P,eACftG,MAAOqG,IAEX3O,EAAAC,EAAAC,cAAC8H,EAAA,EAAKC,MAAN,KACIjI,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAUtG,MAAM,yCAEpBnI,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAQpE,KAAK,UAAb,YAGRhD,EAAAC,EAAAC,cAACwG,EAAA,EAAD,yBAEI1G,EAAAC,EAAAC,cAACK,EAAA,EAAKA,KAAN,CAAWG,SAAS,SAChBV,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,CAAWK,GA5CvB,SAAAd,GAAK,OACbC,EAAAC,EAAAC,cAACC,EAAA,EAADvB,OAAAwB,OAAA,CACEC,OAAK,GACDN,EAFN,CAGEO,gBAAgB,aAyCMjB,KAAK,WACLyB,GAAG,aAFP,wBAjHZG,aC6EL8N,6MAxEX7P,MAAQ,CACJ8P,SAAU,GACV5L,SAAU,KACVH,WAAY,EACZF,QAAS,MA8BbqD,sBAAwB,SAAAhH,GAAkB,IAAfgE,EAAehE,EAAfgE,SACvBzE,EAAKW,SAAS,CAAE8D,iGA5BA,IAAAkD,EAAAxH,KACTW,IAAOmB,KAAK,WACf9B,KAAKiB,MAAM2M,QAAQC,KAAK,UAI5B,IAAImB,EAAO,CACPlL,OAAQnD,IAAOmB,KAAK,WAExB0D,MAAM,iDAAkD,CAC7DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUoJ,GACrBnJ,QAAS,CAACC,eAAe,sBAEzBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACA,SAACV,GACYmC,EAAKhH,SAAS,CAACyD,QAAS,+BAAiCoB,EAAOb,QAAQ,GAAGT,YAAYE,UACvFkC,QAAMC,oBAAoBC,UAAY,sBAEnD,SAACC,GACAC,QAAQC,IAAIF,sCAWH,IAAAmB,EAAAzH,KAAA0H,EAC6C1H,KAAKI,MAAtC+D,GADZuD,EACEwI,SADFxI,EACYvD,YAAYG,EADxBoD,EACwBpD,SAAUL,EADlCyD,EACkCzD,QAMvC,OALAsC,QAAQC,IAAI2J,qCAMRjP,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACIzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAC2H,EAAA,SAAD,CACI/D,KAAMf,EACN+E,cAAehJ,KAAKsH,sBAAsBxG,KAAKd,OAG/CkB,EAAAC,EAAAC,cAAC2H,EAAA,KAAD,CAAM3F,MAAM,MAAMe,WAAYA,KAElCjD,EAAAC,EAAAC,cAAA,iBAAS+C,EAAT,OAAyBG,GACzBpD,EAAAC,EAAAC,cAAA,UAAQc,QAAS,kBAAMuF,EAAKjH,SAAS,SAAAyI,GAAS,MAAK,CAAE9E,WAAY8E,EAAU9E,WAAa,OAAxF,aAGAjD,EAAAC,EAAAC,cAAA,UAAQc,QAAS,kBAAMuF,EAAKjH,SAAS,SAAAyI,GAAS,MAAK,CAAE9E,WAAY8E,EAAU9E,WAAa,OAAxF,uBA/DDhC,aCKjBiO,GCTajO,YDUfjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOxP,KAAK,SAASyP,UAAWV,IAChC1O,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOxP,KAAK,YAAYyP,UAAWpB,IACnChO,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOxP,KAAK,aAAayP,UAAWxB,IACpC5N,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOxP,KAAK,4BAA4ByP,UAAWzG,IACnD3I,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOxP,KAAK,YAAYyP,UAAW/M,IACnCrC,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOxP,KAAK,gBAAgByP,UAAWL,OAI/CM,IAASC,OAAOJ,EAASK,SAASC,eAAe","file":"static/js/main.4f847366.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 188;","import React, {Component} from 'react'\nimport {Menu, Image, Icon} from 'semantic-ui-react'\nimport {NavLink} from 'react-router-dom'\nimport cookie from 'react-cookies'\n\nclass Header extends Component {\n\tstate = {}\n\tconstructor () {\n\t\tsuper()\n\t\tthis.logoutHandle = this.logoutHandle.bind(this)\n\t}\n\t\n\thandleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n\tlogoutHandle = () => {\n\t\tcookie.remove('userId', { path: '/' })\n\t\tcookie.remove('username', { path: '/' })\n\t}\n\n\trender () {\n\t\tconst { activeItem } = this.state\n\t\tconst Nav = props => (\n\t\t<NavLink\n\t\t\texact\n\t\t\t{...props}\n\t\t\tactiveClassName=\"active\"\n\t\t/>\n\t\t);\n\t\treturn (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item header><h1>Computer King</h1></Menu.Item>\n\t\t\t\t<Menu.Menu position='right'>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tname='uploadpdf'\n\t\t\t\t><Icon name='user' /> {cookie.load(\"username\")}</Menu.Item>\n\t\t\t\t<Menu.Item as={Nav}\n\t\t\t\t\tname='message'\n\t\t\t\t\tto='/message'\n\t\t\t\t\tactive={activeItem === 'message'}\n\t\t\t\t\tonClick={this.handleItemClick}\n\t\t\t\t><Icon name='envelope' /></Menu.Item>\n\t\t\t\t{/*<Menu.Item as={Nav}\n\t\t\t\t\tname='notification'\n\t\t\t\t\tto='/notification'\n\t\t\t\t\tactive={activeItem === 'notification'}\n\t\t\t\t\tonClick={this.handleItemClick}\n\t\t><Icon name='bell outline' /></Menu.Item>*/}\n\t\t\t\t<Menu.Item as={Nav}\n\t\t\t\t\tname='logout'\n\t\t\t\t\tto='/login'\n\t\t\t\t\tonClick={this.logoutHandle}\n\t\t\t\t><Icon name='sign-out' /></Menu.Item>\n\t\t\t\t</Menu.Menu>\n\t\t\t</Menu>\n\t\t)\n\t}\n}\n\nexport default Header","import React, {Component} from 'react'\nimport {Dropdown, Icon, Input, Menu } from 'semantic-ui-react'\nimport {NavLink} from 'react-router-dom'\n\n\nclass LeftBar extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render () {\n    const { activeItem } = this.state\n    const Nav = props => (\n      <NavLink\n        exact\n        {...props}\n        activeClassName=\"active\"\n      />\n    );\n    return (\n        <Menu vertical>\n\n          <Menu.Item>\n            <Input placeholder='Search...' />\n          </Menu.Item>\n          <Menu.Item name='browse' active={activeItem === 'browse'} onClick={this.handleItemClick}>\n            <Icon name='grid layout' />\n            Browse\n          </Menu.Item>\n          <Dropdown item text='Application'>\n            <Dropdown.Menu>\n              <Dropdown.Item icon='edit' text='Update Pan Info' as={Nav} to=\"/application/update\" onClick={this.handleItemClick}/>\n              <Dropdown.Item icon='globe' text='New Pan Form' as={Nav} to=\"/application/new\" onClick={this.handleItemClick}/>\n              {/*<Dropdown.Item icon='settings' text='Account Settings' />*/}\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <Menu.Item name='uploadpdf' active={activeItem === 'uploadpdf'} as={Nav} to=\"/uploadpdf\" conClick={this.handleItemClick}>\n            Upload PDF\n          </Menu.Item>\n\n          \n          <Menu.Item \n            as={Nav} to=\"/notification\" \n            name='notification'\n            active={activeItem === 'notification'}\n            onClick={this.handleItemClick}\n          >\n            Notification\n          </Menu.Item>\n\n        \n      </Menu>\n    )\n  }\n}\n\nexport default LeftBar","import React from 'react'\nimport {Grid} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport Header from './Header'\nimport LeftBar from './LeftBar'\nimport '../public/css/knimbus.css'\n\n\nexport default props => {\n  return  (\n    <div>\n      <Header></Header>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2}>\n            <Grid.Column width={3}>\n              <LeftBar></LeftBar>              \n            </Grid.Column>\n            <Grid.Column width={12}>\n              {props.children}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n    </div>\n  )\n}\n","import React, {Component} from 'react'\nimport { Container, Grid, Form, Modal, Input,Select,Button, Segment, Table, Message } from 'semantic-ui-react'\nimport Layout from \"../components/Layout\"\nimport { Document, Page, pdfjs } from 'react-pdf';\n\nclass RequestLists extends Component {\n    state = {\n        isLoaded: false,\n        open: false,\n        inputKey: Date.now(),\n        applications: [],\n        userid: \"\",\n        invoicefile: {\n            name: \"\",\n            size: \"\",\n            content: \"\",\n            type: \"\"\n        },\n        pageNumber: 1,\n        uploadedform: {},\n        modaltype: \"\",\n        numPages: null,\n        alert: {\n\t\t\tmessage: \"\",\n\t\t\ttype: \"\",\n\t\t\tdisplay: false\n\t\t},\n        tablefields: [\"userid\",\"customername\",\"fathername\",\"village\",\"aadharno\",\"mobileno\",\"dateofbirth\",\"state\",\"emailid\"],\n        fields: [\"addresstype\",\"customername\",\"relationship\",\"relationshipname\",\"fathername\",\"village\",\"aadharno\",\"postoffice\",\"mobileno\",\"tehsil\",\"dateofbirth\",\"district\",\"gender\",\"state\",\"emailid\",\"pincode\",\"govtid\"]\n    }\n\n    componentDidMount() {\n        \n        pdfjs.GlobalWorkerOptions.workerSrc = \"/pdf.worker.min.js\";\n\n\t\tfetch(\"http://localhost:3000/api/applications\")\n\t\t.then(res => res.json())\n\t\t.then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    applications: result\n                });\n                //return Object.keys(result.status)\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        )\n        \n    }\n\n    onUpload = (event) => {\n        let reader = new FileReader();\n        let file = event.target.files[0];\n\n        let invoicefile = this.state.invoicefile\n        \n        invoicefile[\"name\"] = file.name\n\t\tinvoicefile[\"type\"] = file.type\n\t\tinvoicefile[\"size\"] = (file.size/1024/1024).toFixed(2)\n\n\t\treader.onloadend = (file) => {\n            //this.setState({govtid: reader.result});\n            invoicefile[\"content\"] = reader.result\n\t\t}\n        reader.readAsDataURL(file)\n        \n        this.setState({invoicefile})\n    }\n    \n    show = (size, userid, modaltype, uploadedform) => () => {\n        fetch(\"http://localhost:3000/api/applications/viewForm\", {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({id: userid}),\n\t\t\theaders: {'Content-Type':'application/json'}\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n                this.setState({uploadedform: \"data:application/pdf;base64,\" + result.message[0].govtid.content })\n                pdfjs.GlobalWorkerOptions.workerSrc = \"/pdf.worker.min.js\";\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n        )\n        \n        this.setState({ size,userid, open: true, modaltype  })\n    }\n    close = () => this.setState({ open: false })\n    \n    onSubmit = async (e) => {\n\t\te.preventDefault()\n\n        let dataObj = {\n            userid: this.state.userid,\n            invoicefile: this.state.invoicefile\n        }\n        \n        this.postApplicationData(dataObj)\n\t}\n\n    postApplicationData = (dataObj) => {\n        \n        fetch(\"http://localhost:3000/api/invoiceslips/addSlip\", {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(dataObj),\n\t\t\theaders: {'Content-Type':'application/json'}\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n                let alert = this.state.alert \n                console.log(result.message.id)\n                if (result.message.id) {                                 \n                    alert[\"message\"] = \"Slip has been uploaded successfully\"\n                    alert[\"type\"] = \"green\"\n                    alert[\"display\"] = true\n                } else {                                    \n                    alert[\"type\"] = \"red\"\n                    alert[\"display\"] = false\n                    alert[\"message\"] = \"There is some problem with the details provided by you.\"\t\t\t\t\n                }\n                this.setState({alert})\n\n                this.clearFormInputs()\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n        )\n    }\n\n    clearFormInputs = () => {\n        \n        this.setState({inputKey: Date.now()})\n    }\n\n    onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({ numPages });\n    }\n\n    render () {\n        const {size, tablefields, applications, open, inputKey, userid, alert, modaltype, uploadedform, pageNumber, numPages} = this.state\n        return (\n            <Layout>\n                <Container>\n                    <Segment>\n                        <h3>New Appications List</h3>\n                    </Segment>\n                    <Segment>\n                        <Table striped celled>\n                            <Table.Header>\n                                <Table.Row>\n                                    {\n                                        tablefields.map ( field =>\n                                            <Table.HeaderCell>{field}</Table.HeaderCell>\n                                        )\n                                    }\n                                    <Table.HeaderCell>Form</Table.HeaderCell>\n                                    <Table.HeaderCell>Slip</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n\n                            <Table.Body>\n                                {\n                                    applications.map ( application =>\n                                        <Table.Row>\n                                            {\n                                                tablefields.map ( field =>\n                                                    <Table.Cell>{application[field]}</Table.Cell>\n                                                )\n                                            }\n                                            <Table.Cell>\n                                                <Button  size='mini' icon='file pdf' onClick={this.show(\"large\", application[\"id\"], \"view\")} />\n                                            </Table.Cell>\n                                            <Table.Cell>\n                                                <Button  size='mini' icon='upload' onClick={this.show(\"tiny\", application[\"userid\"], \"upload\")} />\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    )\n                                }\n                            </Table.Body>\n                        </Table>\n                        <Modal size={size} open={open} onClose={this.close} closeIcon>\n                            <Modal.Header>Upload Slip for User</Modal.Header>\n                            {\n                                alert.display === true &&\n                                <Message size='tiny' color={alert[\"type\"]} onDismiss={this.handleDismiss}>\n                                    <Message.Header>{alert[\"message\"]}</Message.Header>\n                                </Message>\n                            }\n                            <Modal.Content>\n                                {\n                                    modaltype === \"view\" ? (\n                                        <div>\n                                            <Document\n                                                file={uploadedform}\n                                                onLoadSuccess={this.onDocumentLoadSuccess.bind(this)}\n                                            >\n                                                <Page width=\"1038\" pageNumber={pageNumber} />\n                                            </Document>\n                                            <p>Page {pageNumber} of {numPages}</p>\n                                            <button onClick={() => this.setState(prevState => ({ pageNumber: prevState.pageNumber - 1 }))}>\n                                                Prev page\n                                            </button>\n                                            <button onClick={() => this.setState(prevState => ({ pageNumber: prevState.pageNumber + 1 }))}>\n                                                Next page\n                                            </button>\n                                        </div>\n                                    ) : (\n                                        <Form onSubmit={this.onSubmit}>\n                                            <Form.Field\n                                                control={Input}\n                                                label='Userid'\n                                                placeholder='UserID'\n                                                required\n                                                onChange={this.userid}\n                                                value={userid}\n                                            />\n                                            <Form.Input type= \"file\" id=\"file\" name=\"file\" hidden fluid label='Upload Slip' onChange={(event) => this.onUpload(event)} key={inputKey}/>\n                                            <Button type='submit'>Submit</Button>\n                                        </Form>\n                                    )  \n                                    \n                                }\n                                \n                            </Modal.Content>\n                            <Modal.Actions>\n                                {/*\n                                    <p>Page {pageNumber} of {numPages}</p>\n                                    <button onClick={() => this.setState(prevState => ({ pageNumber: prevState.pageNumber - 1 }))}>\n                                        Prev page\n                                    </button>\n                                    <button onClick={() => this.setState(prevState => ({ pageNumber: prevState.pageNumber + 1 }))}>\n                                        Next page\n                                    </button>\n                                    */\n                                }\n                            </Modal.Actions>\n                        </Modal>\n                    </Segment>\n                </Container>\n            </Layout>\n        )\n    }\n}\n\nexport default RequestLists","import React, {Component} from 'react'\nimport { Container, Grid, Form, Input, Select,Button, Segment, Message } from 'semantic-ui-react';\nimport Layout from \"../components/Layout\";\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport cookie from 'react-cookies'\n\nimport * as Constants from '../common/constants'\n\nclass Application extends Component {\n    state = {\n\t\terror: null,\n\t\tisLoaded: false,\n\t\tvalue: \"\",\n\t\talert: {\n\t\t\tmessage: \"\",\n\t\t\ttype: \"\",\n\t\t\tdisplay: false\n\t\t},\n        visible: true,\n        //pannovisible: true,\n        selectedValue: [],\n        panno: \"\",\n\t\taddresstype: \"\",\n\t\tcustomername: \"\",\n\t\trelationship: \"\",\n\t\trelationshipname: \"\",\n\t\tfathername: \"\",\n\t\tvillage: \"\",\n\t\taadharno: \"\",\n        postoffice: \"\",\n        mobileno: \"\",\n        tehsil: \"\",\n        dateofbirth: \"\",\n        district: \"\",\n        gender: \"\",\n        state: \"\",\n        emailid: \"\",\n        pincode: \"\",\n        govtid: {\n            name: \"\",\n            size: \"\",\n            type: \"\",\n            content: \"\"\n        },\n        status: \"\",\n        inputKey: Date.now(),\n        fields: [\"addresstype\",\"customername\",\"relationship\",\"relationshipname\",\"fathername\",\"village\",\"aadharno\",\"postoffice\",\"mobileno\",\"tehsil\",\"dateofbirth\",\"district\",\"gender\",\"state\",\"emailid\",\"pincode\",\"govtid\"]\n    };\n    constructor(){\n        super()\n    }\n\n    componentDidMount() {\n        if ( ! cookie.load(\"userId\")) {\n            this.props.history.push(\"/login\")\n        }\n\n    }\n    \n    pincodeChange = (e, {value}) => {\n        this.setState({pincode: value})\n    }\n    emailChange = (e, {value}) => {\n        this.setState({emailid: value})\n    }\n    stateChange = (e, {value}) => {\n        this.setState({state: value})\n    }\n    genderChange = (e, {value}) => {\n        this.setState({gender: value})\n    }\n    districtChange = (e, {value}) => {\n        this.setState({district: value})\n    }\n    dateofbirthChange = (e, {value}) => {\n        this.setState({dateofbirth: value})\n    }\n    tehsilChange = (e, {value}) => {\n        this.setState({tehsil: value})\n    }\n    mobilenoChange = (e, {value}) => {\n        this.setState({mobileno: value})\n    }\n    postOfficeChange = (e, {value}) => {\n        this.setState({postoffice: value})\n    }\n    aadharNoChange = (e, {value}) => {\n        this.setState({aadharno: value})\n    }\n    villageChange = (e, {value}) => {\n        this.setState({village: value})\n    }\n    fatherNameChange = (e, {value}) => {\n        this.setState({fathername: value})\n    }\n    relationShipChange = (e, {value}) => {\n        this.setState({relationshipname: value})\n    }\n    relationshipOptionsChange = (e, {value}) => {\n        this.setState({relationship: value})\n    }\n    customerNameChange = (e, {value}) => {\n        this.setState({customername: value})\n    }\n    addressTypeChange = (e, {value}) => {\n        this.setState({addresstype: value})\n    }\n    panNoChange = (e, {value}) => {\n        this.setState({panno: value})\n    }\n\n\n    validate = () => {\n\t\tlet alert = this.state.alert\n\t\tif(this.state.formFields.sectionId === \"\") {\n\t\t\talert[\"message\"] = \"Please enter SectioId\"\n\t\t\talert[\"type\"] = \"negative\"\n\t\t\tthis.setState({alert})\n\t\t\treturn false\n\t\t} else {\n\t\t\tlet alert = this.state.alert\n\t\t\talert[\"display\"] = false\n\t\t\treturn true\n\t\t}\n    }\n    \n    onUpload = (event) => {\n        let reader = new FileReader();\n        let file = event.target.files[0];\n\n        let govtid = this.state.govtid\n        \n        govtid[\"name\"] = file.name\n\t\tgovtid[\"type\"] = file.type\n\t\tgovtid[\"size\"] = (file.size/1024/1024).toFixed(2)\n\n\t\treader.onloadend = (file) => {\n            //this.setState({govtid: reader.result});\n            govtid[\"content\"] = reader.result\n\t\t}\n        reader.readAsDataURL(file)\n        \n        this.setState({govtid})\n    }\n\n\n    onSubmit = async (e) => {\n\t\te.preventDefault()\n\n        let dataObj = {\n            status: \"pending\",\n            flag: \"N\",\n            userid: cookie.load(\"userId\")\n        }\n\n        this.state.fields.map(field =>\n            dataObj[field] = this.state[field]\n        )\n        \n        this.postApplicationData(dataObj)\n\t}\n\n    postApplicationData = (dataObj) => {\n        \n        fetch(\"http://localhost:3000/api/applications/addApplication\", {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(dataObj),\n\t\t\theaders: {'Content-Type':'application/json'}\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n                let alert = this.state.alert \n                console.log(result.message.id)\n                if (result.message.id) {                                 \n                    alert[\"message\"] = \"Thanks for sharing your information with us.\"\n                    alert[\"type\"] = \"green\"\n                    alert[\"display\"] = true\n                } else {                                    \n                    alert[\"type\"] = \"red\"\n                    alert[\"display\"] = false\n                    alert[\"message\"] = \"There is some problem with the details provided by you.\"\t\t\t\t\n                }\n                this.setState({alert})\n\n                this.clearFormInputs()\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n        )\n    }\n\n    clearFormInputs = () => {\n        this.state.fields.map(field =>\n            this.setState({[field]: \"\"})\n        )\n        this.setState({inputKey: Date.now()})\n    }\n    \n    render () {\n        const {pannovisible, alert, inputKey,panno, addresstype,customername,relationship,relationshipname,fathername,village,aadharno,postoffice,mobileno,tehsil,dateofbirth,district,gender,state,emailid,pincode,govtid} = this.state\n        const genderOptions = [\n            { key: 'm', text: 'Male', value: 'male' },\n            { key: 'f', text: 'Female', value: 'female' },\n            { key: 'o', text: 'Other', value: 'other' },\n        ]\n        const {application} = this.props.match.params\n        \n        const relationshipOptions = [\n            { key: 'mr.', text: 'Mr.', value: 'mr.' },\n            { key: 'mrs.', text: 'Mrs.', value: 'mrs.' },\n            { key: 'miss', text: 'Miss', value: 'miss' },\n        ]\n\n        return (\n            <Layout>\n                <Container>\n                    <Grid>\n                        <Grid.Column>\n                            <Segment>\n                                <h3>Please Fill application Form</h3>\n                            </Segment>\n                            <Segment>\n                                {\n                                    alert.display === true &&\n                                    <Message size='tiny' color={alert[\"type\"]} onDismiss={this.handleDismiss}>\n                                        <Message.Header>{alert[\"message\"]}</Message.Header>\n                                    </Message>\n                                }\n\n                                <Form onSubmit={this.onSubmit}>\n                                    <Form.Group widths='equal'>\n                                        {\n                                            (application === \"update\") && \n                                            <Form.Field\n                                                control={Input}\n                                                label='Pan Number'\n                                                placeholder='Pan Number'\n                                                required\n                                                onChange={this.panNoChange}\n                                                value={panno}\n                                            />\n                                        }\n                                        \n                                        <Form.Field\n                                            control={Input}\n                                            label='Address Type'\n                                            placeholder='Address Type'\n                                            required\n                                            onChange={this.addressTypeChange}\n                                            value={addresstype}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            label='Customer Name'\n                                            placeholder='Customer Name'\n                                            required\n                                            onChange={this.customerNameChange}\n                                            value={customername}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group widths='equal'>\n                                        <Form.Field\n                                            control={Select}\n                                            options={relationshipOptions}\n                                            label={{ children: 'RelationShip', htmlFor: 'form-select-control-relationship' }}\n                                            placeholder='RelationShip'\n                                            search\n                                            searchInput={{ id: 'form-select-control-relationship' }}\n                                            required\n                                            width={2}\n                                            onChange={this.relationshipOptionsChange}\n                                            value={relationship}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            label=''\n                                            placeholder=\"Enter Husband's or Father's Name\"\n                                            required\n                                            width={4}\n                                            onChange={this.relationShipChange}\n                                            value={relationshipname}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            label='Father Name'\n                                            placeholder='Father Name'\n                                            required\n                                            width={5}\n                                            onChange={this.fatherNameChange}\n                                            value={fathername}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group widths='equal'>\n                                        <Form.Field\n                                            control={Input}\n                                            label='Village'\n                                            placeholder='Village'\n                                            required\n                                            onChange={this.villageChange}\n                                            value={village}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            label='Aadhaar Number'\n                                            placeholder='Aadhaar Number'\n                                            required\n                                            onChange={this.aadharNoChange}\n                                            value={aadharno}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            label='Post Office'\n                                            placeholder='Post Office'\n                                            required\n                                            onChange={this.postOfficeChange}\n                                            value={postoffice}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group widths='equal'>\n                                        <Form.Field\n                                            control={Input}\n                                            label='Mobile No'\n                                            placeholder='Mobile No'\n                                            onChange={this.mobilenoChange}\n                                            required\n                                            value={mobileno}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            label='Tehsil'\n                                            placeholder='Tehsil'\n                                            required\n                                            onChange={this.tehsilChange}\n                                            value={tehsil}\n                                        />                                        \n                                        <DateInput\n                                            name=\"date\"\n                                            placeholder=\"Date\"\n                                            label='Date of Birth'\n                                            value={this.state.date}\n                                            iconPosition=\"left\"\n                                            dateFormat=\"YYYY-MM-DD\"\n                                            value = {dateofbirth}\n                                            onChange={this.dateofbirthChange}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group widths='equal'>\n                                        <Form.Field\n                                            control={Input}\n                                            label='District'\n                                            placeholder='District'\n                                            required\n                                            onChange={this.districtChange}\n                                            value={district}\n                                        />\n                                        <Form.Field\n                                            control={Select}\n                                            options={genderOptions}\n                                            label={{ children: 'Gender', htmlFor: 'form-select-control-gender' }}\n                                            placeholder='Gender'\n                                            search\n                                            searchInput={{ id: 'form-select-control-gender' }}\n                                            required\n                                            onChange={this.genderChange}\n                                            value={gender}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            label='State'\n                                            placeholder='State'\n                                            required\n                                            onChange={this.stateChange}\n                                            value={state}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group widths='equal'>\n                                        <Form.Field\n                                            control={Input}\n                                            label='VLE Email ID'\n                                            placeholder='Email Id'\n                                            required\n                                            onChange={this.emailChange}\n                                            value={emailid}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            label='Pincode'\n                                            placeholder='Pincode'\n                                            required\n                                            onChange={this.pincodeChange}\n                                            value={pincode}\n                                        />\n                                        <Form.Input type= \"file\" id=\"file\" name=\"file\" hidden fluid label='Upload Form' onChange={(event) => this.onUpload(event)} key={inputKey}/>\n                                    </Form.Group>\n                                    <Form.Group widths='equal'>\n                                        <Form.Button color='orange' floated='right'>Submit</Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </Layout>\n        )\n    }\n}\n\nexport default Application","import React, {Component} from 'react'\nimport { Container, Grid, Form, Input, Select,Button, Segment, Message } from 'semantic-ui-react';\nimport Layout from \"../components/Layout\";\nimport cookie from \"react-cookies\"\nimport * as Constants from '../common/constants'\nimport { Document, Page } from 'react-pdf';\n\nclass OfflineApplication extends Component {\n    state = {\n        pdf: \"\",\n        size: \"\",\n        type: \"\",\n        inputKey: Date.now(),\n        name: \"\",\n        alert: {\n\t\t\tmessage: \"\",\n\t\t\ttype: \"\",\n\t\t\tdisplay: false\n\t\t}\n    }\n\n    componentDidMount() {\n        if ( ! cookie.load(\"userId\")) {\n            this.props.history.push(\"/login\")\n        }\n    }\n\n    onUpload = (event) => {\n        if (event.target.files[0]) {\n            let reader = new FileReader();\n            let file = event.target.files[0];\n            this.setState({size: (file.size/1024/1024).toFixed(2)})\n            this.setState({name: file.name})\n            this.setState({type: file.type})\n            \n            reader.onloadend = (file) => {\n                this.setState({pdf: reader.result});\n            }\n            reader.readAsDataURL(file)\n        }\n        \n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        console.log(this.state.size)\n        let data = {\n            form: {\n                content: this.state.pdf,\n                name: this.state.name,\n                size: this.state.size,\n                type: this.state.type\n            },\n            flag: \"N\",\n            status: \"pending\",\n            userid: 12\n        }\n\n        fetch(\"http://localhost:3000/api/offlineforms/uploadOfflineForm\", {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {'Content-Type':'application/json'}\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n                let alert = this.state.alert \n                console.log(result.message.id)\n                if (result.message.id) {                                 \n                    alert[\"message\"] = \"Thanks for sharing your information with us.\"\n                    alert[\"type\"] = \"green\"\n                    alert[\"display\"] = true\n                } else {                                    \n                    alert[\"type\"] = \"red\"\n                    alert[\"display\"] = false\n                    alert[\"message\"] = \"There is some problem with the file. Please re-check and upload again.\"\t\t\t\t\n                }\n                this.setState({alert})\n                this.clearFormInputs()\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n        )\n    }\n\n    clearFormInputs = () => {\n        this.setState({inputKey: Date.now()})\n    }\n\n    render () {\n        const {alert, inputKey} = this.state\n\n        return (\n            <Layout>\n                <Container>\n                    <Grid>\n                        <Grid.Column>\n                            <Segment>\n                                <h3>Please Upload offline Form</h3>\n                            </Segment>\n                            <Segment>\n                                {\n                                    alert.display == true &&\n                                    <Message size='tiny' color={alert[\"type\"]} onDismiss={this.handleDismiss}>\n                                        <Message.Header>{alert[\"message\"]}</Message.Header>\n                                    </Message>\n                                }\n\n                                <Form onSubmit={this.onSubmit}>\n                                    <Form.Group widths='equal'>\n                                        \n                                        <Form.Input type= \"file\" id=\"file\" name=\"file\" hidden fluid label='Upload Form' onChange={(event) => this.onUpload(event)} key={inputKey}/>\n                                    </Form.Group>\n                                    <Form.Group widths='equal'>\n                                        <Form.Button color='orange' floated='right'>Submit</Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </Layout>\n        )\n    }\n}\n\nexport default OfflineApplication","import React, {Component} from 'react'\nimport { Container, Grid, Form, Checkbox, Button, Segment, Input, Message, Menu } from 'semantic-ui-react';\nimport {NavLink} from 'react-router-dom'\n\nclass Register extends Component {\n\n    state = {\n        username: \"\",\n        email: \"\",\n        mobileno: \"\",\n        alert: {\n\t\t\tmessage: \"\",\n\t\t\ttype: \"\",\n\t\t\tdisplay: false\n\t\t}\n    }\n\n    usernameHandle = (e, {value}) => {\n        this.setState({username: value})\n    }\n\n    emailHandle = (e, {value}) => {\n        this.setState({email: value})\n    }\n\n    mobileHandle = (e, {value}) => {\n        this.setState({mobile: value})\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        let data = {\n            username: this.state.username,\n            email: this.state.email,\n            mobile: this.state.mobile\n        }\n\n        fetch(\"http://localhost:3000/api/members/addMember\", {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {'Content-Type':'application/json'}\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n                let alert = this.state.alert \n                \n                if (result.message.id) {                                 \n                    alert[\"message\"] = \"You have been successfully registered.\"\n                    alert[\"type\"] = \"green\"\n                    alert[\"display\"] = true\n                } else {                                    \n                    alert[\"type\"] = \"red\"\n                    alert[\"display\"] = false\n                    alert[\"message\"] = \"There is some problem. Please retry\"\t\t\t\t\n                }\n                this.setState({alert})\n                this.clearFormInputs()\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n        )\n\n    }\n\n    clearFormInputs = () => {\n        this.setState({username: \"\", email: \"\", mobile: \"\"})\n    }\n\n\n    render () {\n        const {username, email, mobile, alert} = this.state\n        const Nav = props => (\n            <NavLink\n              exact\n              {...props}\n              activeClassName=\"active\"\n            />\n        );\n\n        return (\n            <Container>\n                <Grid verticalAlign='middle' columns={3} centered>\n                    <Grid.Row verticalAlign='middle'>\n                        <Grid.Column>\n                            <Segment>                       \n                            </Segment>\n                            <Segment>\n                                <h3>Registration Form</h3>\n                                {\n                                    alert.display === true &&\n                                        <Message size='tiny' color={alert[\"type\"]} onDismiss={this.handleDismiss}>\n                                            <Message.Header>{alert[\"message\"]}</Message.Header>\n                                        </Message>\n                                }\n                                <Form onSubmit={this.onSubmit}>\n                                    <Form.Field\n                                        control={Input}\n                                        label='Full Name'\n                                        placeholder='Full Name'\n                                        required\n                                        onChange={this.usernameHandle}\n                                        value={username}\n                                    />\n                                    <Form.Field\n                                        control={Input}\n                                        label='Email'\n                                        placeholder='Email'\n                                        required\n                                        onChange={this.emailHandle}\n                                        value={email}\n                                    />\n                                    <Form.Field\n                                        control={Input}\n                                        label='Mobile No'\n                                        placeholder='Mobile No'\n                                        required\n                                        onChange={this.mobileHandle}\n                                        value={mobile}\n                                    />\n                                    <Form.Field>\n                                        <Checkbox label='I agree to the Terms and Conditions' />\n                                    </Form.Field>\n                                    <Button type='submit'>Submit</Button>\n                                </Form>\n                            </Segment>\n                            <Segment>\n                                Already have account. Please \n                                <Menu.Menu position='right'>\n                                    <Menu.Item as={Nav}\n                                        name='login'\n                                        to='/login'\n                                        \n                                        onClick={this.handleItemClick}\n                                    >Sign In</Menu.Item>\n                                </Menu.Menu>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default Register","import React, {Component} from 'react'\nimport { Container, Grid, Form, Checkbox, Button, Segment, Menu, Input } from 'semantic-ui-react';\nimport {NavLink, Redirect} from 'react-router-dom'\nimport cookie from 'react-cookies'\n\nclass Login extends Component {\n\n\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    componentDidMount() {\n        if (cookie.load('userId')) {\n            this.props.history.push('/uploadpdf')\n        }\n    }\n\n\n    usernameHandle = (event, {value}) => {\n        this.setState({email: value})\n    }\n\n    passwordHandle = (event, {value}) => {\n        this.setState({password: value})\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        let data = {\n            where: {\n                email: this.state.email,\n                password: this.state.password\n            }\n        }\n\n        fetch(\"http://localhost:3000/api/members/findOne?filter=\" + JSON.stringify(data))\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n                let alert = this.state.alert \n                console.log(result)\n\n                if (result.id && result.email) {\n                    cookie.save('userId', result.id, { path: '/' })\n                    cookie.save('username', result.username, { path: '/' })\n                    this.props.history.push('/uploadpdf')\n                }\n                /*\n                if (result.message.id) {                                 \n                    alert[\"message\"] = \"You have been successfully registered.\"\n                    alert[\"type\"] = \"green\"\n                    alert[\"display\"] = true\n                } else {                                    \n                    alert[\"type\"] = \"red\"\n                    alert[\"display\"] = false\n                    alert[\"message\"] = \"There is some problem. Please retry\"\t\t\t\t\n                }\n                this.setState({alert})*/\n                this.clearFormInputs()\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n        )\n    }\n\n    clearFormInputs = () => {\n        this.setState({password: \"\", email: \"\"})\n    }\n\n    render () {\n        const {email, password} = this.state\n        const Nav = props => (\n            <NavLink\n              exact\n              {...props}\n              activeClassName=\"active\"\n            />\n        );\n\n        return (\n            <Container>\n                <Grid verticalAlign='middle' columns={3} centered>\n                <Grid.Row verticalAlign='middle'>\n                    <Grid.Column>\n                        <Segment>\n                            \n                        </Segment>\n                        <Segment>\n                            <h3 >Login</h3>\n                            <Form onSubmit={this.onSubmit}>\n                                <Form.Field\n                                    control={Input}\n                                    label='Email'\n                                    placeholder='email'\n                                    required\n                                    onChange={this.usernameHandle}\n                                    value={email}\n                                />\n                                <Form.Field\n                                    control={Input}\n                                    label='Password'\n                                    placeholder='password'\n                                    required\n                                    onChange={this.passwordHandle}\n                                    value={password}\n                                />\n                                <Form.Field>\n                                    <Checkbox label='I agree to the Terms and Conditions' />\n                                </Form.Field>\n                                <Button type='submit'>Submit</Button>\n                            </Form>\n                        </Segment>\n                        <Segment>\n                            Create an account \n                            <Menu.Menu position='right'>\n                                <Menu.Item as={Nav}\n                                    name='register'\n                                    to='/register'\n                                >Sign Up</Menu.Item>\n                            </Menu.Menu>\n                        </Segment>\n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default Login","import React, {Component} from 'react'\nimport { Container, Grid, Image, Segment } from 'semantic-ui-react';\nimport {NavLink, Redirect} from 'react-router-dom'\nimport Layout from \"../components/Layout\";\nimport cookie from 'react-cookies'\nimport { Document, Page, pdfjs } from 'react-pdf';\n//setOptions({ workerSrc: '/pdf.worker.min.js', })\n\nclass ViewSlip extends Component {\n\n    state = {\n        filename: \"\",\n        numPages: null,\n        pageNumber: 1,\n        content: \"\"\n    }\n\n    componentDidMount() {\n        if ( ! cookie.load(\"userId\")) {\n            this.props.history.push(\"/login\")\n        }\n        \n\n        let data = {\n            userid: cookie.load(\"userId\"),\n        }\n        fetch(\"http://localhost:3000/api/invoiceslips/viewPDF\", {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {'Content-Type':'application/json'}\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n                this.setState({content: \"data:application/pdf;base64,\" + result.message[0].invoicefile.content })\n                pdfjs.GlobalWorkerOptions.workerSrc = \"/pdf.worker.min.js\";\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n        )\n        \n    }\n\n    onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({ numPages });\n        \n    }\n\n    render() {\n        const {filename, pageNumber, numPages, content} = this.state\n        console.log(process.env.REACT_APP_PUBLIC_URL)\n        \n        //var bitmap = fs.readFileSync(\"/Users/cruise/Downloads/upload/slips/256102#BALINDER5.pdf\");\n        //console.log(bitmap)\n        \n        return (\n            <Layout>\n                <Container>\n                    <Segment>\n                        <Document\n                            file={content}\n                            onLoadSuccess={this.onDocumentLoadSuccess.bind(this)}\n                            \n                        >\n                            <Page width=\"912\" pageNumber={pageNumber} />\n                        </Document>\n                        <p>Page {pageNumber} of {numPages}</p>\n                        <button onClick={() => this.setState(prevState => ({ pageNumber: prevState.pageNumber - 1 }))}>\n                            Prev page\n                        </button>\n                        <button onClick={() => this.setState(prevState => ({ pageNumber: prevState.pageNumber + 1 }))}>\n                            Next page\n                        </button>\n\n                    </Segment>\n                </Container>\n            </Layout>    \n        )\n    }\n}\n\nexport default ViewSlip","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n//import App from './App';\nimport RequestLists from './pages/requestslist';\nimport Application from './pages/application';\nimport OfflineApplication from './pages/offlineapplication';\n//import * as serviceWorker from './serviceWorker';\nimport Register from './pages/register';\nimport Login from './pages/login';\nimport ViewSlip from './pages/viewslip';\nimport Main from './pages/main';\n\nconst routing = (\n    <Router>\n      <div>\n        {/*<Route path=\"/\" component={Main} />*/}\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/uploadpdf\" component={OfflineApplication} />\n        <Route path=\"/application/:application\" component={Application} />\n        <Route path=\"/requests\" component={RequestLists} />\n        <Route path=\"/notification\" component={ViewSlip} />\n      </div>\n    </Router>\n  )\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","import React, {Component} from 'react'\nimport { Grid, Segment, Menu } from 'semantic-ui-react'\nimport {NavLink} from 'react-router-dom'\n\nclass Main extends Component {\n    state = {\n        \n    }\n    \n    render() {\n        const Nav = props => (\n            <NavLink\n                exact\n                {...props}\n                activeClassName=\"active\"\n            />\n        );\n        return (\n            <Grid columns={3} divided>\n                <Grid.Row stretched>\n                    <Grid.Column>\n                        <Segment></Segment>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Segment>\n                            <Menu>\n                                <Menu.Menu >\n                                    <Menu.Item as={Nav}\n                                        name='login'\n                                        to='/login'\n                                        onClick={this.handleItemClick}\n                                    >Login</Menu.Item>\n                                    <Menu.Item as={Nav}\n                                        name='register'\n                                        to='/register'\n                                        onClick={this.handleItemClick}\n                                    >Register</Menu.Item>\n                                </Menu.Menu>\n                            </Menu>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Segment></Segment>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n\nexport default Main"],"sourceRoot":""}